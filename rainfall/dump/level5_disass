
executables/level5:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 18                	add    BYTE PTR [eax],bl
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	14 00                	adc    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	03 00                	add    eax,DWORD PTR [eax]
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 fb                	add    bl,bh
 8048179:	35 18 ed 7d db       	xor    eax,0xdb7ded18
 804817e:	09 7b 6f             	or     DWORD PTR [ebx+0x6f],edi
 8048181:	8a 23                	mov    ah,BYTE PTR [ebx]
 8048183:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 8048184:	9f                   	lahf   
 8048185:	ad                   	lods   eax,DWORD PTR ds:[esi]
 8048186:	17                   	pop    ss
 8048187:	a7                   	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 8048188:	92                   	xchg   edx,eax
 8048189:	ae                   	scas   al,BYTE PTR es:[edi]
 804818a:	35                   	.byte 0x35
 804818b:	d8                   	.byte 0xd8

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	02 00                	add    al,BYTE PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	08 00                	or     BYTE PTR [eax],al
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	01 00                	add    DWORD PTR [eax],eax
 8048196:	00 00                	add    BYTE PTR [eax],al
 8048198:	05 00 00 00 80       	add    eax,0x80000000
 804819d:	28 00                	sub    BYTE PTR [eax],al
 804819f:	20 00                	and    BYTE PTR [eax],al
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 08                	add    BYTE PTR [eax],cl
 80481a5:	00 00                	add    BYTE PTR [eax],al
 80481a7:	00 ac 4b e3 c0 67 55 	add    BYTE PTR [ebx+ecx*2+0x5567c0e3],ch
 80481ae:	61                   	popa   
 80481af:	10                   	.byte 0x10

Disassembly of section .dynsym:

080481b0 <.dynsym>:
	...
 80481c0:	35 00 00 00 00       	xor    eax,0x0
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00 00                	add    BYTE PTR [eax],al
 80481c9:	00 00                	add    BYTE PTR [eax],al
 80481cb:	00 12                	add    BYTE PTR [edx],dl
 80481cd:	00 00                	add    BYTE PTR [eax],al
 80481cf:	00 2f                	add    BYTE PTR [edi],ch
	...
 80481d9:	00 00                	add    BYTE PTR [eax],al
 80481db:	00 12                	add    BYTE PTR [edx],dl
 80481dd:	00 00                	add    BYTE PTR [eax],al
 80481df:	00 3c 00             	add    BYTE PTR [eax+eax*1],bh
	...
 80481ea:	00 00                	add    BYTE PTR [eax],al
 80481ec:	12 00                	adc    al,BYTE PTR [eax]
 80481ee:	00 00                	add    BYTE PTR [eax],al
 80481f0:	42                   	inc    edx
	...
 80481f9:	00 00                	add    BYTE PTR [eax],al
 80481fb:	00 12                	add    BYTE PTR [edx],dl
 80481fd:	00 00                	add    BYTE PTR [eax],al
 80481ff:	00 01                	add    BYTE PTR [ecx],al
	...
 8048209:	00 00                	add    BYTE PTR [eax],al
 804820b:	00 20                	add    BYTE PTR [eax],ah
 804820d:	00 00                	add    BYTE PTR [eax],al
 804820f:	00 30                	add    BYTE PTR [eax],dh
	...
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 12                	add    BYTE PTR [edx],dl
 804821d:	00 00                	add    BYTE PTR [eax],al
 804821f:	00 49 00             	add    BYTE PTR [ecx+0x0],cl
	...
 804822a:	00 00                	add    BYTE PTR [eax],al
 804822c:	12 00                	adc    al,BYTE PTR [eax]
 804822e:	00 00                	add    BYTE PTR [eax],al
 8048230:	1a 00                	sbb    al,BYTE PTR [eax]
 8048232:	00 00                	add    BYTE PTR [eax],al
 8048234:	ec                   	in     al,dx
 8048235:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 8048238:	04 00                	add    al,0x0
 804823a:	00 00                	add    BYTE PTR [eax],al
 804823c:	11 00                	adc    DWORD PTR [eax],eax
 804823e:	0f 00 29             	verw   WORD PTR [ecx]
 8048241:	00 00                	add    BYTE PTR [eax],al
 8048243:	00 48 98             	add    BYTE PTR [eax-0x68],cl
 8048246:	04 08                	add    al,0x8
 8048248:	04 00                	add    al,0x0
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	11 00                	adc    DWORD PTR [eax],eax
 804824e:	19 00                	sbb    DWORD PTR [eax],eax

Disassembly of section .dynstr:

08048250 <.dynstr>:
 8048250:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048253:	67 6d                	ins    DWORD PTR es:[di],dx
 8048255:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048256:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048257:	5f                   	pop    edi
 8048258:	73 74                	jae    80482ce <_init-0x66>
 804825a:	61                   	popa   
 804825b:	72 74                	jb     80482d1 <_init-0x63>
 804825d:	5f                   	pop    edi
 804825e:	5f                   	pop    edi
 804825f:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048263:	63 2e                	arpl   WORD PTR [esi],bp
 8048265:	73 6f                	jae    80482d6 <_init-0x5e>
 8048267:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 804826c:	4f                   	dec    edi
 804826d:	5f                   	pop    edi
 804826e:	73 74                	jae    80482e4 <_init-0x50>
 8048270:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048277:	64 
 8048278:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 804827b:	64 69 6e 00 5f 65 78 	imul   ebp,DWORD PTR fs:[esi+0x0],0x6978655f
 8048282:	69 
 8048283:	74 00                	je     8048285 <_init-0xaf>
 8048285:	70 72                	jo     80482f9 <_init-0x3b>
 8048287:	69 6e 74 66 00 66 67 	imul   ebp,DWORD PTR [esi+0x74],0x67660066
 804828e:	65 74 73             	gs je  8048304 <_init-0x30>
 8048291:	00 73 79             	add    BYTE PTR [ebx+0x79],dh
 8048294:	73 74                	jae    804830a <_init-0x2a>
 8048296:	65 6d                	gs ins DWORD PTR es:[edi],dx
 8048298:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804829b:	6c                   	ins    BYTE PTR es:[edi],dx
 804829c:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482a3:	72 74                	jb     8048319 <_init-0x1b>
 80482a5:	5f                   	pop    edi
 80482a6:	6d                   	ins    DWORD PTR es:[edi],dx
 80482a7:	61                   	popa   
 80482a8:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 80482af:	43                   	inc    ebx
 80482b0:	5f                   	pop    edi
 80482b1:	32 2e                	xor    ch,BYTE PTR [esi]
 80482b3:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080482b6 <.gnu.version>:
 80482b6:	00 00                	add    BYTE PTR [eax],al
 80482b8:	02 00                	add    al,BYTE PTR [eax]
 80482ba:	02 00                	add    al,BYTE PTR [eax]
 80482bc:	02 00                	add    al,BYTE PTR [eax]
 80482be:	02 00                	add    al,BYTE PTR [eax]
 80482c0:	00 00                	add    BYTE PTR [eax],al
 80482c2:	02 00                	add    al,BYTE PTR [eax]
 80482c4:	02 00                	add    al,BYTE PTR [eax]
 80482c6:	01 00                	add    DWORD PTR [eax],eax
 80482c8:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .gnu.version_r:

080482cc <.gnu.version_r>:
 80482cc:	01 00                	add    DWORD PTR [eax],eax
 80482ce:	01 00                	add    DWORD PTR [eax],eax
 80482d0:	10 00                	adc    BYTE PTR [eax],al
 80482d2:	00 00                	add    BYTE PTR [eax],al
 80482d4:	10 00                	adc    BYTE PTR [eax],al
 80482d6:	00 00                	add    BYTE PTR [eax],al
 80482d8:	00 00                	add    BYTE PTR [eax],al
 80482da:	00 00                	add    BYTE PTR [eax],al
 80482dc:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 80482df:	0d 00 00 02 00       	or     eax,0x20000
 80482e4:	5b                   	pop    ebx
 80482e5:	00 00                	add    BYTE PTR [eax],al
 80482e7:	00 00                	add    BYTE PTR [eax],al
 80482e9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

080482ec <.rel.dyn>:
 80482ec:	14 98                	adc    al,0x98
 80482ee:	04 08                	add    al,0x8
 80482f0:	06                   	push   es
 80482f1:	05 00 00 48 98       	add    eax,0x98480000
 80482f6:	04 08                	add    al,0x8
 80482f8:	05                   	.byte 0x5
 80482f9:	09 00                	or     DWORD PTR [eax],eax
	...

Disassembly of section .rel.plt:

080482fc <.rel.plt>:
 80482fc:	24 98                	and    al,0x98
 80482fe:	04 08                	add    al,0x8
 8048300:	07                   	pop    es
 8048301:	01 00                	add    DWORD PTR [eax],eax
 8048303:	00 28                	add    BYTE PTR [eax],ch
 8048305:	98                   	cwde   
 8048306:	04 08                	add    al,0x8
 8048308:	07                   	pop    es
 8048309:	02 00                	add    al,BYTE PTR [eax]
 804830b:	00 2c 98             	add    BYTE PTR [eax+ebx*4],ch
 804830e:	04 08                	add    al,0x8
 8048310:	07                   	pop    es
 8048311:	03 00                	add    eax,DWORD PTR [eax]
 8048313:	00 30                	add    BYTE PTR [eax],dh
 8048315:	98                   	cwde   
 8048316:	04 08                	add    al,0x8
 8048318:	07                   	pop    es
 8048319:	04 00                	add    al,0x0
 804831b:	00 34 98             	add    BYTE PTR [eax+ebx*4],dh
 804831e:	04 08                	add    al,0x8
 8048320:	07                   	pop    es
 8048321:	05 00 00 38 98       	add    eax,0x98380000
 8048326:	04 08                	add    al,0x8
 8048328:	07                   	pop    es
 8048329:	06                   	push   es
 804832a:	00 00                	add    BYTE PTR [eax],al
 804832c:	3c 98                	cmp    al,0x98
 804832e:	04 08                	add    al,0x8
 8048330:	07                   	pop    es
 8048331:	07                   	pop    es
	...

Disassembly of section .init:

08048334 <_init>:
 8048334:	53                   	push   ebx
 8048335:	83 ec 08             	sub    esp,0x8
 8048338:	e8 00 00 00 00       	call   804833d <_init+0x9>
 804833d:	5b                   	pop    ebx
 804833e:	81 c3 db 14 00 00    	add    ebx,0x14db
 8048344:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804834a:	85 c0                	test   eax,eax
 804834c:	74 05                	je     8048353 <_init+0x1f>
 804834e:	e8 6d 00 00 00       	call   80483c0 <__gmon_start__@plt>
 8048353:	e8 28 01 00 00       	call   8048480 <frame_dummy>
 8048358:	e8 43 02 00 00       	call   80485a0 <__do_global_ctors_aux>
 804835d:	83 c4 08             	add    esp,0x8
 8048360:	5b                   	pop    ebx
 8048361:	c3                   	ret    

Disassembly of section .plt:

08048370 <.plt>:
 8048370:	ff 35 1c 98 04 08    	push   DWORD PTR ds:0x804981c
 8048376:	ff 25 20 98 04 08    	jmp    DWORD PTR ds:0x8049820
 804837c:	00 00                	add    BYTE PTR [eax],al
	...

08048380 <printf@plt>:
 8048380:	ff 25 24 98 04 08    	jmp    DWORD PTR ds:0x8049824
 8048386:	68 00 00 00 00       	push   0x0
 804838b:	e9 e0 ff ff ff       	jmp    8048370 <.plt>

08048390 <_exit@plt>:
 8048390:	ff 25 28 98 04 08    	jmp    DWORD PTR ds:0x8049828
 8048396:	68 08 00 00 00       	push   0x8
 804839b:	e9 d0 ff ff ff       	jmp    8048370 <.plt>

080483a0 <fgets@plt>:
 80483a0:	ff 25 2c 98 04 08    	jmp    DWORD PTR ds:0x804982c
 80483a6:	68 10 00 00 00       	push   0x10
 80483ab:	e9 c0 ff ff ff       	jmp    8048370 <.plt>

080483b0 <system@plt>:
 80483b0:	ff 25 30 98 04 08    	jmp    DWORD PTR ds:0x8049830
 80483b6:	68 18 00 00 00       	push   0x18
 80483bb:	e9 b0 ff ff ff       	jmp    8048370 <.plt>

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 34 98 04 08    	jmp    DWORD PTR ds:0x8049834
 80483c6:	68 20 00 00 00       	push   0x20
 80483cb:	e9 a0 ff ff ff       	jmp    8048370 <.plt>

080483d0 <exit@plt>:
 80483d0:	ff 25 38 98 04 08    	jmp    DWORD PTR ds:0x8049838
 80483d6:	68 28 00 00 00       	push   0x28
 80483db:	e9 90 ff ff ff       	jmp    8048370 <.plt>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 3c 98 04 08    	jmp    DWORD PTR ds:0x804983c
 80483e6:	68 30 00 00 00       	push   0x30
 80483eb:	e9 80 ff ff ff       	jmp    8048370 <.plt>

Disassembly of section .text:

080483f0 <_start>:
 80483f0:	31 ed                	xor    ebp,ebp
 80483f2:	5e                   	pop    esi
 80483f3:	89 e1                	mov    ecx,esp
 80483f5:	83 e4 f0             	and    esp,0xfffffff0
 80483f8:	50                   	push   eax
 80483f9:	54                   	push   esp
 80483fa:	52                   	push   edx
 80483fb:	68 90 85 04 08       	push   0x8048590
 8048400:	68 20 85 04 08       	push   0x8048520
 8048405:	51                   	push   ecx
 8048406:	56                   	push   esi
 8048407:	68 04 85 04 08       	push   0x8048504
 804840c:	e8 cf ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048411:	f4                   	hlt    
 8048412:	90                   	nop
 8048413:	90                   	nop
 8048414:	90                   	nop
 8048415:	90                   	nop
 8048416:	90                   	nop
 8048417:	90                   	nop
 8048418:	90                   	nop
 8048419:	90                   	nop
 804841a:	90                   	nop
 804841b:	90                   	nop
 804841c:	90                   	nop
 804841d:	90                   	nop
 804841e:	90                   	nop
 804841f:	90                   	nop

08048420 <__do_global_dtors_aux>:
 8048420:	55                   	push   ebp
 8048421:	89 e5                	mov    ebp,esp
 8048423:	53                   	push   ebx
 8048424:	83 ec 04             	sub    esp,0x4
 8048427:	80 3d 4c 98 04 08 00 	cmp    BYTE PTR ds:0x804984c,0x0
 804842e:	75 3f                	jne    804846f <__do_global_dtors_aux+0x4f>
 8048430:	a1 50 98 04 08       	mov    eax,ds:0x8049850
 8048435:	bb 44 97 04 08       	mov    ebx,0x8049744
 804843a:	81 eb 40 97 04 08    	sub    ebx,0x8049740
 8048440:	c1 fb 02             	sar    ebx,0x2
 8048443:	83 eb 01             	sub    ebx,0x1
 8048446:	39 d8                	cmp    eax,ebx
 8048448:	73 1e                	jae    8048468 <__do_global_dtors_aux+0x48>
 804844a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048450:	83 c0 01             	add    eax,0x1
 8048453:	a3 50 98 04 08       	mov    ds:0x8049850,eax
 8048458:	ff 14 85 40 97 04 08 	call   DWORD PTR [eax*4+0x8049740]
 804845f:	a1 50 98 04 08       	mov    eax,ds:0x8049850
 8048464:	39 d8                	cmp    eax,ebx
 8048466:	72 e8                	jb     8048450 <__do_global_dtors_aux+0x30>
 8048468:	c6 05 4c 98 04 08 01 	mov    BYTE PTR ds:0x804984c,0x1
 804846f:	83 c4 04             	add    esp,0x4
 8048472:	5b                   	pop    ebx
 8048473:	5d                   	pop    ebp
 8048474:	c3                   	ret    
 8048475:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048479:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048480 <frame_dummy>:
 8048480:	55                   	push   ebp
 8048481:	89 e5                	mov    ebp,esp
 8048483:	83 ec 18             	sub    esp,0x18
 8048486:	a1 48 97 04 08       	mov    eax,ds:0x8049748
 804848b:	85 c0                	test   eax,eax
 804848d:	74 12                	je     80484a1 <frame_dummy+0x21>
 804848f:	b8 00 00 00 00       	mov    eax,0x0
 8048494:	85 c0                	test   eax,eax
 8048496:	74 09                	je     80484a1 <frame_dummy+0x21>
 8048498:	c7 04 24 48 97 04 08 	mov    DWORD PTR [esp],0x8049748
 804849f:	ff d0                	call   eax
 80484a1:	c9                   	leave  
 80484a2:	c3                   	ret    
 80484a3:	90                   	nop

080484a4 <o>:
 80484a4:	55                   	push   ebp
 80484a5:	89 e5                	mov    ebp,esp
 80484a7:	83 ec 18             	sub    esp,0x18
 80484aa:	c7 04 24 f0 85 04 08 	mov    DWORD PTR [esp],0x80485f0
 80484b1:	e8 fa fe ff ff       	call   80483b0 <system@plt>
 80484b6:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
 80484bd:	e8 ce fe ff ff       	call   8048390 <_exit@plt>

080484c2 <n>:
 80484c2:	55                   	push   ebp
 80484c3:	89 e5                	mov    ebp,esp
 80484c5:	81 ec 18 02 00 00    	sub    esp,0x218
 80484cb:	a1 48 98 04 08       	mov    eax,ds:0x8049848
 80484d0:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80484d4:	c7 44 24 04 00 02 00 	mov    DWORD PTR [esp+0x4],0x200
 80484db:	00 
 80484dc:	8d 85 f8 fd ff ff    	lea    eax,[ebp-0x208]
 80484e2:	89 04 24             	mov    DWORD PTR [esp],eax
 80484e5:	e8 b6 fe ff ff       	call   80483a0 <fgets@plt>
 80484ea:	8d 85 f8 fd ff ff    	lea    eax,[ebp-0x208]
 80484f0:	89 04 24             	mov    DWORD PTR [esp],eax
 80484f3:	e8 88 fe ff ff       	call   8048380 <printf@plt>
 80484f8:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
 80484ff:	e8 cc fe ff ff       	call   80483d0 <exit@plt>

08048504 <main>:
 8048504:	55                   	push   ebp
 8048505:	89 e5                	mov    ebp,esp
 8048507:	83 e4 f0             	and    esp,0xfffffff0
 804850a:	e8 b3 ff ff ff       	call   80484c2 <n>
 804850f:	c9                   	leave  
 8048510:	c3                   	ret    
 8048511:	90                   	nop
 8048512:	90                   	nop
 8048513:	90                   	nop
 8048514:	90                   	nop
 8048515:	90                   	nop
 8048516:	90                   	nop
 8048517:	90                   	nop
 8048518:	90                   	nop
 8048519:	90                   	nop
 804851a:	90                   	nop
 804851b:	90                   	nop
 804851c:	90                   	nop
 804851d:	90                   	nop
 804851e:	90                   	nop
 804851f:	90                   	nop

08048520 <__libc_csu_init>:
 8048520:	55                   	push   ebp
 8048521:	57                   	push   edi
 8048522:	56                   	push   esi
 8048523:	53                   	push   ebx
 8048524:	e8 69 00 00 00       	call   8048592 <__i686.get_pc_thunk.bx>
 8048529:	81 c3 ef 12 00 00    	add    ebx,0x12ef
 804852f:	83 ec 1c             	sub    esp,0x1c
 8048532:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048536:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 804853c:	e8 f3 fd ff ff       	call   8048334 <_init>
 8048541:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048547:	29 c7                	sub    edi,eax
 8048549:	c1 ff 02             	sar    edi,0x2
 804854c:	85 ff                	test   edi,edi
 804854e:	74 29                	je     8048579 <__libc_csu_init+0x59>
 8048550:	31 f6                	xor    esi,esi
 8048552:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048558:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 804855c:	89 2c 24             	mov    DWORD PTR [esp],ebp
 804855f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048563:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048567:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804856b:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 8048572:	83 c6 01             	add    esi,0x1
 8048575:	39 fe                	cmp    esi,edi
 8048577:	75 df                	jne    8048558 <__libc_csu_init+0x38>
 8048579:	83 c4 1c             	add    esp,0x1c
 804857c:	5b                   	pop    ebx
 804857d:	5e                   	pop    esi
 804857e:	5f                   	pop    edi
 804857f:	5d                   	pop    ebp
 8048580:	c3                   	ret    
 8048581:	eb 0d                	jmp    8048590 <__libc_csu_fini>
 8048583:	90                   	nop
 8048584:	90                   	nop
 8048585:	90                   	nop
 8048586:	90                   	nop
 8048587:	90                   	nop
 8048588:	90                   	nop
 8048589:	90                   	nop
 804858a:	90                   	nop
 804858b:	90                   	nop
 804858c:	90                   	nop
 804858d:	90                   	nop
 804858e:	90                   	nop
 804858f:	90                   	nop

08048590 <__libc_csu_fini>:
 8048590:	f3 c3                	repz ret 

08048592 <__i686.get_pc_thunk.bx>:
 8048592:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048595:	c3                   	ret    
 8048596:	90                   	nop
 8048597:	90                   	nop
 8048598:	90                   	nop
 8048599:	90                   	nop
 804859a:	90                   	nop
 804859b:	90                   	nop
 804859c:	90                   	nop
 804859d:	90                   	nop
 804859e:	90                   	nop
 804859f:	90                   	nop

080485a0 <__do_global_ctors_aux>:
 80485a0:	55                   	push   ebp
 80485a1:	89 e5                	mov    ebp,esp
 80485a3:	53                   	push   ebx
 80485a4:	83 ec 04             	sub    esp,0x4
 80485a7:	a1 38 97 04 08       	mov    eax,ds:0x8049738
 80485ac:	83 f8 ff             	cmp    eax,0xffffffff
 80485af:	74 13                	je     80485c4 <__do_global_ctors_aux+0x24>
 80485b1:	bb 38 97 04 08       	mov    ebx,0x8049738
 80485b6:	66 90                	xchg   ax,ax
 80485b8:	83 eb 04             	sub    ebx,0x4
 80485bb:	ff d0                	call   eax
 80485bd:	8b 03                	mov    eax,DWORD PTR [ebx]
 80485bf:	83 f8 ff             	cmp    eax,0xffffffff
 80485c2:	75 f4                	jne    80485b8 <__do_global_ctors_aux+0x18>
 80485c4:	83 c4 04             	add    esp,0x4
 80485c7:	5b                   	pop    ebx
 80485c8:	5d                   	pop    ebp
 80485c9:	c3                   	ret    
 80485ca:	90                   	nop
 80485cb:	90                   	nop

Disassembly of section .fini:

080485cc <_fini>:
 80485cc:	53                   	push   ebx
 80485cd:	83 ec 08             	sub    esp,0x8
 80485d0:	e8 00 00 00 00       	call   80485d5 <_fini+0x9>
 80485d5:	5b                   	pop    ebx
 80485d6:	81 c3 43 12 00 00    	add    ebx,0x1243
 80485dc:	e8 3f fe ff ff       	call   8048420 <__do_global_dtors_aux>
 80485e1:	83 c4 08             	add    esp,0x8
 80485e4:	5b                   	pop    ebx
 80485e5:	c3                   	ret    

Disassembly of section .rodata:

080485e8 <_fp_hw>:
 80485e8:	03 00                	add    eax,DWORD PTR [eax]
	...

080485ec <_IO_stdin_used>:
 80485ec:	01 00                	add    DWORD PTR [eax],eax
 80485ee:	02 00                	add    al,BYTE PTR [eax]
 80485f0:	2f                   	das    
 80485f1:	62 69 6e             	bound  ebp,QWORD PTR [ecx+0x6e]
 80485f4:	2f                   	das    
 80485f5:	73 68                	jae    804865f <_IO_stdin_used+0x73>
	...

Disassembly of section .eh_frame_hdr:

080485f8 <.eh_frame_hdr>:
 80485f8:	01 1b                	add    DWORD PTR [ebx],ebx
 80485fa:	03 3b                	add    edi,DWORD PTR [ebx]
 80485fc:	40                   	inc    eax
 80485fd:	00 00                	add    BYTE PTR [eax],al
 80485ff:	00 07                	add    BYTE PTR [edi],al
 8048601:	00 00                	add    BYTE PTR [eax],al
 8048603:	00 78 fd             	add    BYTE PTR [eax-0x3],bh
 8048606:	ff                   	(bad)  
 8048607:	ff 5c 00 00          	call   FWORD PTR [eax+eax*1+0x0]
 804860b:	00 ac fe ff ff 80 00 	add    BYTE PTR [esi+edi*8+0x80ffff],ch
 8048612:	00 00                	add    BYTE PTR [eax],al
 8048614:	ca fe ff             	retf   0xfffe
 8048617:	ff 9c 00 00 00 0c ff 	call   FWORD PTR [eax+eax*1-0xf40000]
 804861e:	ff                   	(bad)  
 804861f:	ff                   	(bad)  
 8048620:	b8 00 00 00 28       	mov    eax,0x28000000
 8048625:	ff                   	(bad)  
 8048626:	ff                   	(bad)  
 8048627:	ff                   	(bad)  
 8048628:	d8 00                	fadd   DWORD PTR [eax]
 804862a:	00 00                	add    BYTE PTR [eax],al
 804862c:	98                   	cwde   
 804862d:	ff                   	(bad)  
 804862e:	ff                   	(bad)  
 804862f:	ff 14 01             	call   DWORD PTR [ecx+eax*1]
 8048632:	00 00                	add    BYTE PTR [eax],al
 8048634:	9a ff ff ff 28 01 00 	call   0x1:0x28ffffff
	...

Disassembly of section .eh_frame:

0804863c <__FRAME_END__-0xf8>:
 804863c:	14 00                	adc    al,0x0
 804863e:	00 00                	add    BYTE PTR [eax],al
 8048640:	00 00                	add    BYTE PTR [eax],al
 8048642:	00 00                	add    BYTE PTR [eax],al
 8048644:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 8048647:	00 01                	add    BYTE PTR [ecx],al
 8048649:	7c 08                	jl     8048653 <_IO_stdin_used+0x67>
 804864b:	01 1b                	add    DWORD PTR [ebx],ebx
 804864d:	0c 04                	or     al,0x4
 804864f:	04 88                	add    al,0x88
 8048651:	01 00                	add    DWORD PTR [eax],eax
 8048653:	00 20                	add    BYTE PTR [eax],ah
 8048655:	00 00                	add    BYTE PTR [eax],al
 8048657:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804865a:	00 00                	add    BYTE PTR [eax],al
 804865c:	14 fd                	adc    al,0xfd
 804865e:	ff                   	(bad)  
 804865f:	ff 80 00 00 00 00    	inc    DWORD PTR [eax+0x0]
 8048665:	0e                   	push   cs
 8048666:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048669:	0c 4a                	or     al,0x4a
 804866b:	0f 0b                	ud2    
 804866d:	74 04                	je     8048673 <_IO_stdin_used+0x87>
 804866f:	78 00                	js     8048671 <_IO_stdin_used+0x85>
 8048671:	3f                   	aas    
 8048672:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048674:	2a 32                	sub    dh,BYTE PTR [edx]
 8048676:	24 22                	and    al,0x22
 8048678:	18 00                	sbb    BYTE PTR [eax],al
 804867a:	00 00                	add    BYTE PTR [eax],al
 804867c:	40                   	inc    eax
 804867d:	00 00                	add    BYTE PTR [eax],al
 804867f:	00 24 fe             	add    BYTE PTR [esi+edi*8],ah
 8048682:	ff                   	(bad)  
 8048683:	ff 1e                	call   FWORD PTR [esi]
 8048685:	00 00                	add    BYTE PTR [eax],al
 8048687:	00 00                	add    BYTE PTR [eax],al
 8048689:	41                   	inc    ecx
 804868a:	0e                   	push   cs
 804868b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048691:	00 00                	add    BYTE PTR [eax],al
 8048693:	00 18                	add    BYTE PTR [eax],bl
 8048695:	00 00                	add    BYTE PTR [eax],al
 8048697:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
 804869b:	00 26                	add    BYTE PTR [esi],ah
 804869d:	fe                   	(bad)  
 804869e:	ff                   	(bad)  
 804869f:	ff 42 00             	inc    DWORD PTR [edx+0x0]
 80486a2:	00 00                	add    BYTE PTR [eax],al
 80486a4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80486a7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80486ad:	00 00                	add    BYTE PTR [eax],al
 80486af:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80486b2:	00 00                	add    BYTE PTR [eax],al
 80486b4:	78 00                	js     80486b6 <_IO_stdin_used+0xca>
 80486b6:	00 00                	add    BYTE PTR [eax],al
 80486b8:	4c                   	dec    esp
 80486b9:	fe                   	(bad)  
 80486ba:	ff                   	(bad)  
 80486bb:	ff 0d 00 00 00 00    	dec    DWORD PTR ds:0x0
 80486c1:	41                   	inc    ecx
 80486c2:	0e                   	push   cs
 80486c3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80486c9:	49                   	dec    ecx
 80486ca:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80486cd:	04 00                	add    al,0x0
 80486cf:	00 38                	add    BYTE PTR [eax],bh
 80486d1:	00 00                	add    BYTE PTR [eax],al
 80486d3:	00 98 00 00 00 48    	add    BYTE PTR [eax+0x48000000],bl
 80486d9:	fe                   	(bad)  
 80486da:	ff                   	(bad)  
 80486db:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80486de:	00 00                	add    BYTE PTR [eax],al
 80486e0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80486e3:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80486e9:	87 03                	xchg   DWORD PTR [ebx],eax
 80486eb:	41                   	inc    ecx
 80486ec:	0e                   	push   cs
 80486ed:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 80486f3:	83 05 4e 0e 30 02 4a 	add    DWORD PTR ds:0x2300e4e,0x4a
 80486fa:	0e                   	push   cs
 80486fb:	14 41                	adc    al,0x41
 80486fd:	0e                   	push   cs
 80486fe:	10 c3                	adc    bl,al
 8048700:	41                   	inc    ecx
 8048701:	0e                   	push   cs
 8048702:	0c c6                	or     al,0xc6
 8048704:	41                   	inc    ecx
 8048705:	0e                   	push   cs
 8048706:	08 c7                	or     bh,al
 8048708:	41                   	inc    ecx
 8048709:	0e                   	push   cs
 804870a:	04 c5                	add    al,0xc5
 804870c:	10 00                	adc    BYTE PTR [eax],al
 804870e:	00 00                	add    BYTE PTR [eax],al
 8048710:	d4 00                	aam    0x0
 8048712:	00 00                	add    BYTE PTR [eax],al
 8048714:	7c fe                	jl     8048714 <_IO_stdin_used+0x128>
 8048716:	ff                   	(bad)  
 8048717:	ff 02                	inc    DWORD PTR [edx]
 8048719:	00 00                	add    BYTE PTR [eax],al
 804871b:	00 00                	add    BYTE PTR [eax],al
 804871d:	00 00                	add    BYTE PTR [eax],al
 804871f:	00 10                	add    BYTE PTR [eax],dl
 8048721:	00 00                	add    BYTE PTR [eax],al
 8048723:	00 e8                	add    al,ch
 8048725:	00 00                	add    BYTE PTR [eax],al
 8048727:	00 6a fe             	add    BYTE PTR [edx-0x2],ch
 804872a:	ff                   	(bad)  
 804872b:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 804872e:	00 00                	add    BYTE PTR [eax],al
 8048730:	00 00                	add    BYTE PTR [eax],al
	...

08048734 <__FRAME_END__>:
 8048734:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .ctors:

08049738 <__CTOR_LIST__>:
 8049738:	ff                   	(bad)  
 8049739:	ff                   	(bad)  
 804973a:	ff                   	(bad)  
 804973b:	ff                 	inc    DWORD PTR [eax]

0804973c <__CTOR_END__>:
 804973c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dtors:

08049740 <__DTOR_LIST__>:
 8049740:	ff                   	(bad)  
 8049741:	ff                   	(bad)  
 8049742:	ff                   	(bad)  
 8049743:	ff                 	inc    DWORD PTR [eax]

08049744 <__DTOR_END__>:
 8049744:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .jcr:

08049748 <__JCR_END__>:
 8049748:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

0804974c <_DYNAMIC>:
 804974c:	01 00                	add    DWORD PTR [eax],eax
 804974e:	00 00                	add    BYTE PTR [eax],al
 8049750:	10 00                	adc    BYTE PTR [eax],al
 8049752:	00 00                	add    BYTE PTR [eax],al
 8049754:	0c 00                	or     al,0x0
 8049756:	00 00                	add    BYTE PTR [eax],al
 8049758:	34 83                	xor    al,0x83
 804975a:	04 08                	add    al,0x8
 804975c:	0d 00 00 00 cc       	or     eax,0xcc000000
 8049761:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 8049764:	f5                   	cmc    
 8049765:	fe                   	(bad)  
 8049766:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049769:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049770:	50                   	push   eax
 8049771:	82 04 08 06          	add    BYTE PTR [eax+ecx*1],0x6
 8049775:	00 00                	add    BYTE PTR [eax],al
 8049777:	00 b0 81 04 08 0a    	add    BYTE PTR [eax+0xa080481],dh
 804977d:	00 00                	add    BYTE PTR [eax],al
 804977f:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
 8049782:	00 00                	add    BYTE PTR [eax],al
 8049784:	0b 00                	or     eax,DWORD PTR [eax]
 8049786:	00 00                	add    BYTE PTR [eax],al
 8049788:	10 00                	adc    BYTE PTR [eax],al
 804978a:	00 00                	add    BYTE PTR [eax],al
 804978c:	15 00 00 00 00       	adc    eax,0x0
 8049791:	00 00                	add    BYTE PTR [eax],al
 8049793:	00 03                	add    BYTE PTR [ebx],al
 8049795:	00 00                	add    BYTE PTR [eax],al
 8049797:	00 18                	add    BYTE PTR [eax],bl
 8049799:	98                   	cwde   
 804979a:	04 08                	add    al,0x8
 804979c:	02 00                	add    al,BYTE PTR [eax]
 804979e:	00 00                	add    BYTE PTR [eax],al
 80497a0:	38 00                	cmp    BYTE PTR [eax],al
 80497a2:	00 00                	add    BYTE PTR [eax],al
 80497a4:	14 00                	adc    al,0x0
 80497a6:	00 00                	add    BYTE PTR [eax],al
 80497a8:	11 00                	adc    DWORD PTR [eax],eax
 80497aa:	00 00                	add    BYTE PTR [eax],al
 80497ac:	17                   	pop    ss
 80497ad:	00 00                	add    BYTE PTR [eax],al
 80497af:	00 fc                	add    ah,bh
 80497b1:	82 04 08 11          	add    BYTE PTR [eax+ecx*1],0x11
 80497b5:	00 00                	add    BYTE PTR [eax],al
 80497b7:	00 ec                	add    ah,ch
 80497b9:	82 04 08 12          	add    BYTE PTR [eax+ecx*1],0x12
 80497bd:	00 00                	add    BYTE PTR [eax],al
 80497bf:	00 10                	add    BYTE PTR [eax],dl
 80497c1:	00 00                	add    BYTE PTR [eax],al
 80497c3:	00 13                	add    BYTE PTR [ebx],dl
 80497c5:	00 00                	add    BYTE PTR [eax],al
 80497c7:	00 08                	add    BYTE PTR [eax],cl
 80497c9:	00 00                	add    BYTE PTR [eax],al
 80497cb:	00 fe                	add    dh,bh
 80497cd:	ff                   	(bad)  
 80497ce:	ff 6f cc             	jmp    FWORD PTR [edi-0x34]
 80497d1:	82 04 08 ff          	add    BYTE PTR [eax+ecx*1],0xff
 80497d5:	ff                   	(bad)  
 80497d6:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 80497d9:	00 00                	add    BYTE PTR [eax],al
 80497db:	00 f0                	add    al,dh
 80497dd:	ff                   	(bad)  
 80497de:	ff 6f b6             	jmp    FWORD PTR [edi-0x4a]
 80497e1:	82 04 08 00          	add    BYTE PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

08049814 <.got>:
 8049814:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

08049818 <_GLOBAL_OFFSET_TABLE_>:
 8049818:	4c                   	dec    esp
 8049819:	97                   	xchg   edi,eax
 804981a:	04 08                	add    al,0x8
	...
 8049824:	86 83 04 08 96 83    	xchg   BYTE PTR [ebx-0x7c69f7fc],al
 804982a:	04 08                	add    al,0x8
 804982c:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 804982d:	83 04 08 b6          	add    DWORD PTR [eax+ecx*1],0xffffffb6
 8049831:	83 04 08 c6          	add    DWORD PTR [eax+ecx*1],0xffffffc6
 8049835:	83 04 08 d6          	add    DWORD PTR [eax+ecx*1],0xffffffd6
 8049839:	83 04 08 e6          	add    DWORD PTR [eax+ecx*1],0xffffffe6
 804983d:	83                   	.byte 0x83
 804983e:	04 08                	add    al,0x8

Disassembly of section .data:

08049840 <__data_start>:
 8049840:	00 00                	add    BYTE PTR [eax],al
	...

08049844 <__dso_handle>:
 8049844:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

08049848 <stdin@@GLIBC_2.0>:
 8049848:	00 00                	add    BYTE PTR [eax],al
	...

0804984c <completed.6159>:
 804984c:	00 00                	add    BYTE PTR [eax],al
	...

08049850 <dtor_idx.6161>:
 8049850:	00 00                	add    BYTE PTR [eax],al
	...

08049854 <m>:
 8049854:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x80482bc>
   a:	74 75                	je     81 <_init-0x80482b3>
   c:	2f                   	das    
   d:	4c                   	dec    esp
   e:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  15:	2e 36 2e 33 2d 31 75 	cs ss xor ebp,DWORD PTR cs:0x75627531
  1c:	62 75 
  1e:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1f:	74 75                	je     96 <_init-0x804829e>
  21:	35 29 20 34 2e       	xor    eax,0x2e342029
  26:	36 2e 33 00          	ss xor eax,DWORD PTR cs:[eax]
