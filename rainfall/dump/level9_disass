
executables/level9:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 18                	add    BYTE PTR [eax],bl
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	14 00                	adc    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	03 00                	add    eax,DWORD PTR [eax]
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 aa 59 a3 dd 66    	add    BYTE PTR [edx+0x66dda359],ch
 804817d:	74 00                	je     804817f <_init-0x2e5>
 804817f:	79 7d                	jns    80481fe <_init-0x266>
 8048181:	f4                   	hlt    
 8048182:	98                   	cwde   
 8048183:	85 64 41 e0          	test   DWORD PTR [ecx+eax*2-0x20],esp
 8048187:	1e                   	push   ds
 8048188:	fa                   	cli    
 8048189:	3a                   	.byte 0x3a
 804818a:	b6 f5                	mov    dh,0xf5

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	03 00                	add    eax,DWORD PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	0a 00                	or     al,BYTE PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	01 00                	add    DWORD PTR [eax],eax
 8048196:	00 00                	add    BYTE PTR [eax],al
 8048198:	05 00 00 00 00       	add    eax,0x0
 804819d:	63 00                	arpl   WORD PTR [eax],ax
 804819f:	20 0a                	and    BYTE PTR [edx],cl
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 0b                	add    BYTE PTR [ebx],cl
 80481a5:	00 00                	add    BYTE PTR [eax],al
 80481a7:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 80481aa:	00 00                	add    BYTE PTR [eax],al
 80481ac:	c9                   	leave  
 80481ad:	81 0a d2 ad 4b e3    	or     DWORD PTR [edx],0xe34badd2
 80481b3:	c0 29 45             	shr    BYTE PTR [ecx],0x45
 80481b6:	d5 4c                	aad    0x4c

Disassembly of section .dynsym:

080481b8 <.dynsym>:
	...
 80481c8:	b5 00                	mov    ch,0x0
	...
 80481d2:	00 00                	add    BYTE PTR [eax],al
 80481d4:	12 00                	adc    al,BYTE PTR [eax]
 80481d6:	00 00                	add    BYTE PTR [eax],al
 80481d8:	10 00                	adc    BYTE PTR [eax],al
	...
 80481e2:	00 00                	add    BYTE PTR [eax],al
 80481e4:	20 00                	and    BYTE PTR [eax],al
 80481e6:	00 00                	add    BYTE PTR [eax],al
 80481e8:	1f                   	pop    ds
	...
 80481f1:	00 00                	add    BYTE PTR [eax],al
 80481f3:	00 20                	add    BYTE PTR [eax],ah
 80481f5:	00 00                	add    BYTE PTR [eax],al
 80481f7:	00 39                	add    BYTE PTR [ecx],bh
	...
 8048201:	00 00                	add    BYTE PTR [eax],al
 8048203:	00 12                	add    BYTE PTR [edx],dl
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00 c9                	add    cl,cl
	...
 8048211:	00 00                	add    BYTE PTR [eax],al
 8048213:	00 12                	add    BYTE PTR [edx],dl
 8048215:	00 00                	add    BYTE PTR [eax],al
 8048217:	00 a8 00 00 00 00    	add    BYTE PTR [eax+0x0],ch
 804821d:	00 00                	add    BYTE PTR [eax],al
 804821f:	00 00                	add    BYTE PTR [eax],al
 8048221:	00 00                	add    BYTE PTR [eax],al
 8048223:	00 12                	add    BYTE PTR [edx],dl
 8048225:	00 00                	add    BYTE PTR [eax],al
 8048227:	00 c2                	add    dl,al
	...
 8048231:	00 00                	add    BYTE PTR [eax],al
 8048233:	00 12                	add    BYTE PTR [edx],dl
 8048235:	00 00                	add    BYTE PTR [eax],al
 8048237:	00 ae 00 00 00 00    	add    BYTE PTR [esi+0x0],ch
 804823d:	00 00                	add    BYTE PTR [eax],al
 804823f:	00 00                	add    BYTE PTR [eax],al
 8048241:	00 00                	add    BYTE PTR [eax],al
 8048243:	00 12                	add    BYTE PTR [edx],dl
 8048245:	00 00                	add    BYTE PTR [eax],al
 8048247:	00 33                	add    BYTE PTR [ebx],dh
	...
 8048251:	00 00                	add    BYTE PTR [eax],al
 8048253:	00 12                	add    BYTE PTR [edx],dl
 8048255:	00 00                	add    BYTE PTR [eax],al
 8048257:	00 69 00             	add    BYTE PTR [ecx+0x0],ch
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	80 9b 04 08 2c 00 00 	sbb    BYTE PTR [ebx+0x2c0804],0x0
 8048263:	00 21                	add    BYTE PTR [ecx],ah
 8048265:	00 1a                	add    BYTE PTR [edx],bl
 8048267:	00 99 00 00 00 3c    	add    BYTE PTR [ecx+0x3c000000],bl
 804826d:	88 04 08             	mov    BYTE PTR [eax+ecx*1],al
 8048270:	04 00                	add    al,0x0
 8048272:	00 00                	add    BYTE PTR [eax],al
 8048274:	11 00                	adc    DWORD PTR [eax],eax
 8048276:	0f 00 51 00          	lldt   WORD PTR [ecx+0x0]
 804827a:	00 00                	add    BYTE PTR [eax],al
 804827c:	00 85 04 08 00 00    	add    BYTE PTR [ebp+0x804],al
 8048282:	00 00                	add    BYTE PTR [eax],al
 8048284:	12 00                	adc    al,BYTE PTR [eax]
	...

Disassembly of section .dynstr:

08048288 <.dynstr>:
 8048288:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 804828c:	73 74                	jae    8048302 <_init-0x162>
 804828e:	64 63 2b             	arpl   WORD PTR fs:[ebx],bp
 8048291:	2b 2e                	sub    ebp,DWORD PTR [esi]
 8048293:	73 6f                	jae    8048304 <_init-0x160>
 8048295:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[edi+0x5f],bl
 804829a:	67 6d                	ins    DWORD PTR es:[di],dx
 804829c:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804829d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804829e:	5f                   	pop    edi
 804829f:	73 74                	jae    8048315 <_init-0x14f>
 80482a1:	61                   	popa   
 80482a2:	72 74                	jb     8048318 <_init-0x14c>
 80482a4:	5f                   	pop    edi
 80482a5:	5f                   	pop    edi
 80482a6:	00 5f 4a             	add    BYTE PTR [edi+0x4a],bl
 80482a9:	76 5f                	jbe    804830a <_init-0x15a>
 80482ab:	52                   	push   edx
 80482ac:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
 80482b3:	43 6c 
 80482b5:	61                   	popa   
 80482b6:	73 73                	jae    804832b <_init-0x139>
 80482b8:	65 73 00             	gs jae 80482bb <_init-0x1a9>
 80482bb:	5f                   	pop    edi
 80482bc:	5a                   	pop    edx
 80482bd:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482be:	77 6a                	ja     804832a <_init-0x13a>
 80482c0:	00 5f 5a             	add    BYTE PTR [edi+0x5a],bl
 80482c3:	4e                   	dec    esi
 80482c4:	53                   	push   ebx
 80482c5:	74 38                	je     80482ff <_init-0x165>
 80482c7:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [edi+0x73],0x7361625f
 80482ce:	65 34 49             	gs xor al,0x49
 80482d1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482d2:	69 74 43 31 45 76 00 	imul   esi,DWORD PTR [ebx+eax*2+0x31],0x5f007645
 80482d9:	5f 
 80482da:	5a                   	pop    edx
 80482db:	4e                   	dec    esi
 80482dc:	53                   	push   ebx
 80482dd:	74 38                	je     8048317 <_init-0x14d>
 80482df:	69 6f 73 5f 62 61 73 	imul   ebp,DWORD PTR [edi+0x73],0x7361625f
 80482e6:	65 34 49             	gs xor al,0x49
 80482e9:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482ea:	69 74 44 31 45 76 00 	imul   esi,DWORD PTR [esp+eax*2+0x31],0x5f007645
 80482f1:	5f 
 80482f2:	5a                   	pop    edx
 80482f3:	54                   	push   esp
 80482f4:	56                   	push   esi
 80482f5:	4e                   	dec    esi
 80482f6:	31 30                	xor    DWORD PTR [eax],esi
 80482f8:	5f                   	pop    edi
 80482f9:	5f                   	pop    edi
 80482fa:	63 78 78             	arpl   WORD PTR [eax+0x78],di
 80482fd:	61                   	popa   
 80482fe:	62 69 76             	bound  ebp,QWORD PTR [ecx+0x76]
 8048301:	31 31                	xor    DWORD PTR [ecx],esi
 8048303:	37                   	aaa    
 8048304:	5f                   	pop    edi
 8048305:	5f                   	pop    edi
 8048306:	63 6c 61 73          	arpl   WORD PTR [ecx+eiz*2+0x73],bp
 804830a:	73 5f                	jae    804836b <_init-0xf9>
 804830c:	74 79                	je     8048387 <_init-0xdd>
 804830e:	70 65                	jo     8048375 <_init-0xef>
 8048310:	5f                   	pop    edi
 8048311:	69 6e 66 6f 45 00 6c 	imul   ebp,DWORD PTR [esi+0x66],0x6c00456f
 8048318:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [edx+0x63],0x2e6f732e
 804831f:	36 00 5f 49          	add    BYTE PTR ss:[edi+0x49],bl
 8048323:	4f                   	dec    edi
 8048324:	5f                   	pop    edi
 8048325:	73 74                	jae    804839b <_init-0xc9>
 8048327:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 804832e:	64 
 804832f:	00 5f 65             	add    BYTE PTR [edi+0x65],bl
 8048332:	78 69                	js     804839d <_init-0xc7>
 8048334:	74 00                	je     8048336 <_init-0x12e>
 8048336:	73 74                	jae    80483ac <_init-0xb8>
 8048338:	72 6c                	jb     80483a6 <_init-0xbe>
 804833a:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 804833c:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804833f:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 8048342:	5f                   	pop    edi
 8048343:	61                   	popa   
 8048344:	74 65                	je     80483ab <_init-0xb9>
 8048346:	78 69                	js     80483b1 <_init-0xb3>
 8048348:	74 00                	je     804834a <_init-0x11a>
 804834a:	6d                   	ins    DWORD PTR es:[edi],dx
 804834b:	65 6d                	gs ins DWORD PTR es:[edi],dx
 804834d:	63 70 79             	arpl   WORD PTR [eax+0x79],si
 8048350:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048353:	6c                   	ins    BYTE PTR es:[edi],dx
 8048354:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 804835b:	72 74                	jb     80483d1 <_init-0x93>
 804835d:	5f                   	pop    edi
 804835e:	6d                   	ins    DWORD PTR es:[edi],dx
 804835f:	61                   	popa   
 8048360:	69 6e 00 43 58 58 41 	imul   ebp,DWORD PTR [esi+0x0],0x41585843
 8048367:	42                   	inc    edx
 8048368:	49                   	dec    ecx
 8048369:	5f                   	pop    edi
 804836a:	31 2e                	xor    DWORD PTR [esi],ebp
 804836c:	33 00                	xor    eax,DWORD PTR [eax]
 804836e:	47                   	inc    edi
 804836f:	4c                   	dec    esp
 8048370:	49                   	dec    ecx
 8048371:	42                   	inc    edx
 8048372:	43                   	inc    ebx
 8048373:	58                   	pop    eax
 8048374:	58                   	pop    eax
 8048375:	5f                   	pop    edi
 8048376:	33 2e                	xor    ebp,DWORD PTR [esi]
 8048378:	34 00                	xor    al,0x0
 804837a:	47                   	inc    edi
 804837b:	4c                   	dec    esp
 804837c:	49                   	dec    ecx
 804837d:	42                   	inc    edx
 804837e:	43                   	inc    ebx
 804837f:	5f                   	pop    edi
 8048380:	32 2e                	xor    ch,BYTE PTR [esi]
 8048382:	30 00                	xor    BYTE PTR [eax],al
 8048384:	47                   	inc    edi
 8048385:	4c                   	dec    esp
 8048386:	49                   	dec    ecx
 8048387:	42                   	inc    edx
 8048388:	43                   	inc    ebx
 8048389:	5f                   	pop    edi
 804838a:	32 2e                	xor    ch,BYTE PTR [esi]
 804838c:	31 2e                	xor    DWORD PTR [esi],ebp
 804838e:	33 00                	xor    eax,DWORD PTR [eax]

Disassembly of section .gnu.version:

08048390 <.gnu.version>:
 8048390:	00 00                	add    BYTE PTR [eax],al
 8048392:	02 00                	add    al,BYTE PTR [eax]
 8048394:	00 00                	add    BYTE PTR [eax],al
 8048396:	00 00                	add    BYTE PTR [eax],al
 8048398:	03 00                	add    eax,DWORD PTR [eax]
 804839a:	04 00                	add    al,0x0
 804839c:	04 00                	add    al,0x0
 804839e:	04 00                	add    al,0x0
 80483a0:	04 00                	add    al,0x0
 80483a2:	03 00                	add    eax,DWORD PTR [eax]
 80483a4:	05 00 01 00 03       	add    eax,0x3000100
	...

Disassembly of section .gnu.version_r:

080483ac <.gnu.version_r>:
 80483ac:	01 00                	add    DWORD PTR [eax],eax
 80483ae:	02 00                	add    al,BYTE PTR [eax]
 80483b0:	01 00                	add    DWORD PTR [eax],eax
 80483b2:	00 00                	add    BYTE PTR [eax],al
 80483b4:	10 00                	adc    BYTE PTR [eax],al
 80483b6:	00 00                	add    BYTE PTR [eax],al
 80483b8:	30 00                	xor    BYTE PTR [eax],al
 80483ba:	00 00                	add    BYTE PTR [eax],al
 80483bc:	d3 af 6b 05 00 00    	shr    DWORD PTR [edi+0x56b],cl
 80483c2:	05 00 db 00 00       	add    eax,0xdb00
 80483c7:	00 10                	add    BYTE PTR [eax],dl
 80483c9:	00 00                	add    BYTE PTR [eax],al
 80483cb:	00 74 29 92          	add    BYTE PTR [ecx+ebp*1-0x6e],dh
 80483cf:	08 00                	or     BYTE PTR [eax],al
 80483d1:	00 03                	add    BYTE PTR [ebx],al
 80483d3:	00 e6                	add    dh,ah
 80483d5:	00 00                	add    BYTE PTR [eax],al
 80483d7:	00 00                	add    BYTE PTR [eax],al
 80483d9:	00 00                	add    BYTE PTR [eax],al
 80483db:	00 01                	add    BYTE PTR [ecx],al
 80483dd:	00 02                	add    BYTE PTR [edx],al
 80483df:	00 8f 00 00 00 10    	add    BYTE PTR [edi+0x10000000],cl
 80483e5:	00 00                	add    BYTE PTR [eax],al
 80483e7:	00 00                	add    BYTE PTR [eax],al
 80483e9:	00 00                	add    BYTE PTR [eax],al
 80483eb:	00 10                	add    BYTE PTR [eax],dl
 80483ed:	69 69 0d 00 00 04 00 	imul   ebp,DWORD PTR [ecx+0xd],0x40000
 80483f4:	f2 00 00             	repnz add BYTE PTR [eax],al
 80483f7:	00 10                	add    BYTE PTR [eax],dl
 80483f9:	00 00                	add    BYTE PTR [eax],al
 80483fb:	00 73 1f             	add    BYTE PTR [ebx+0x1f],dh
 80483fe:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [ecx],0x20000
 8048404:	fc                   	cld    
 8048405:	00 00                	add    BYTE PTR [eax],al
 8048407:	00 00                	add    BYTE PTR [eax],al
 8048409:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

0804840c <.rel.dyn>:
 804840c:	40                   	inc    eax
 804840d:	9b                   	fwait
 804840e:	04 08                	add    al,0x8
 8048410:	06                   	push   es
 8048411:	02 00                	add    al,BYTE PTR [eax]
 8048413:	00 80 9b 04 08 05    	add    BYTE PTR [eax+0x508049b],al
 8048419:	0a 00                	or     al,BYTE PTR [eax]
	...

Disassembly of section .rel.plt:

0804841c <.rel.plt>:
 804841c:	50                   	push   eax
 804841d:	9b                   	fwait
 804841e:	04 08                	add    al,0x8
 8048420:	07                   	pop    es
 8048421:	01 00                	add    DWORD PTR [eax],eax
 8048423:	00 54 9b 04          	add    BYTE PTR [ebx+ebx*4+0x4],dl
 8048427:	08 07                	or     BYTE PTR [edi],al
 8048429:	02 00                	add    al,BYTE PTR [eax]
 804842b:	00 58 9b             	add    BYTE PTR [eax-0x65],bl
 804842e:	04 08                	add    al,0x8
 8048430:	07                   	pop    es
 8048431:	04 00                	add    al,0x0
 8048433:	00 5c 9b 04          	add    BYTE PTR [ebx+ebx*4+0x4],bl
 8048437:	08 07                	or     BYTE PTR [edi],al
 8048439:	05 00 00 60 9b       	add    eax,0x9b600000
 804843e:	04 08                	add    al,0x8
 8048440:	07                   	pop    es
 8048441:	06                   	push   es
 8048442:	00 00                	add    BYTE PTR [eax],al
 8048444:	64 9b                	fs fwait
 8048446:	04 08                	add    al,0x8
 8048448:	07                   	pop    es
 8048449:	0c 00                	or     al,0x0
 804844b:	00 68 9b             	add    BYTE PTR [eax-0x65],ch
 804844e:	04 08                	add    al,0x8
 8048450:	07                   	pop    es
 8048451:	07                   	pop    es
 8048452:	00 00                	add    BYTE PTR [eax],al
 8048454:	6c                   	ins    BYTE PTR es:[edi],dx
 8048455:	9b                   	fwait
 8048456:	04 08                	add    al,0x8
 8048458:	07                   	pop    es
 8048459:	08 00                	or     BYTE PTR [eax],al
 804845b:	00 70 9b             	add    BYTE PTR [eax-0x65],dh
 804845e:	04 08                	add    al,0x8
 8048460:	07                   	pop    es
 8048461:	09 00                	or     DWORD PTR [eax],eax
	...

Disassembly of section .init:

08048464 <_init>:
 8048464:	53                   	push   ebx
 8048465:	83 ec 08             	sub    esp,0x8
 8048468:	e8 00 00 00 00       	call   804846d <_init+0x9>
 804846d:	5b                   	pop    ebx
 804846e:	81 c3 d7 16 00 00    	add    ebx,0x16d7
 8048474:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804847a:	85 c0                	test   eax,eax
 804847c:	74 05                	je     8048483 <_init+0x1f>
 804847e:	e8 3d 00 00 00       	call   80484c0 <__gmon_start__@plt>
 8048483:	e8 48 01 00 00       	call   80485d0 <frame_dummy>
 8048488:	e8 63 03 00 00       	call   80487f0 <__do_global_ctors_aux>
 804848d:	83 c4 08             	add    esp,0x8
 8048490:	5b                   	pop    ebx
 8048491:	c3                   	ret    

Disassembly of section .plt:

080484a0 <.plt>:
 80484a0:	ff 35 48 9b 04 08    	push   DWORD PTR ds:0x8049b48
 80484a6:	ff 25 4c 9b 04 08    	jmp    DWORD PTR ds:0x8049b4c
 80484ac:	00 00                	add    BYTE PTR [eax],al
	...

080484b0 <__cxa_atexit@plt>:
 80484b0:	ff 25 50 9b 04 08    	jmp    DWORD PTR ds:0x8049b50
 80484b6:	68 00 00 00 00       	push   0x0
 80484bb:	e9 e0 ff ff ff       	jmp    80484a0 <.plt>

080484c0 <__gmon_start__@plt>:
 80484c0:	ff 25 54 9b 04 08    	jmp    DWORD PTR ds:0x8049b54
 80484c6:	68 08 00 00 00       	push   0x8
 80484cb:	e9 d0 ff ff ff       	jmp    80484a0 <.plt>

080484d0 <std::ios_base::Init::Init()@plt>:
 80484d0:	ff 25 58 9b 04 08    	jmp    DWORD PTR ds:0x8049b58
 80484d6:	68 10 00 00 00       	push   0x10
 80484db:	e9 c0 ff ff ff       	jmp    80484a0 <.plt>

080484e0 <__libc_start_main@plt>:
 80484e0:	ff 25 5c 9b 04 08    	jmp    DWORD PTR ds:0x8049b5c
 80484e6:	68 18 00 00 00       	push   0x18
 80484eb:	e9 b0 ff ff ff       	jmp    80484a0 <.plt>

080484f0 <_exit@plt>:
 80484f0:	ff 25 60 9b 04 08    	jmp    DWORD PTR ds:0x8049b60
 80484f6:	68 20 00 00 00       	push   0x20
 80484fb:	e9 a0 ff ff ff       	jmp    80484a0 <.plt>

08048500 <std::ios_base::Init::~Init()@plt>:
 8048500:	ff 25 64 9b 04 08    	jmp    DWORD PTR ds:0x8049b64
 8048506:	68 28 00 00 00       	push   0x28
 804850b:	e9 90 ff ff ff       	jmp    80484a0 <.plt>

08048510 <memcpy@plt>:
 8048510:	ff 25 68 9b 04 08    	jmp    DWORD PTR ds:0x8049b68
 8048516:	68 30 00 00 00       	push   0x30
 804851b:	e9 80 ff ff ff       	jmp    80484a0 <.plt>

08048520 <strlen@plt>:
 8048520:	ff 25 6c 9b 04 08    	jmp    DWORD PTR ds:0x8049b6c
 8048526:	68 38 00 00 00       	push   0x38
 804852b:	e9 70 ff ff ff       	jmp    80484a0 <.plt>

08048530 <operator new(unsigned int)@plt>:
 8048530:	ff 25 70 9b 04 08    	jmp    DWORD PTR ds:0x8049b70
 8048536:	68 40 00 00 00       	push   0x40
 804853b:	e9 60 ff ff ff       	jmp    80484a0 <.plt>

Disassembly of section .text:

08048540 <_start>:
 8048540:	31 ed                	xor    ebp,ebp
 8048542:	5e                   	pop    esi
 8048543:	89 e1                	mov    ecx,esp
 8048545:	83 e4 f0             	and    esp,0xfffffff0
 8048548:	50                   	push   eax
 8048549:	54                   	push   esp
 804854a:	52                   	push   edx
 804854b:	68 e0 87 04 08       	push   0x80487e0
 8048550:	68 70 87 04 08       	push   0x8048770
 8048555:	51                   	push   ecx
 8048556:	56                   	push   esi
 8048557:	68 f4 85 04 08       	push   0x80485f4
 804855c:	e8 7f ff ff ff       	call   80484e0 <__libc_start_main@plt>
 8048561:	f4                   	hlt    
 8048562:	90                   	nop
 8048563:	90                   	nop
 8048564:	90                   	nop
 8048565:	90                   	nop
 8048566:	90                   	nop
 8048567:	90                   	nop
 8048568:	90                   	nop
 8048569:	90                   	nop
 804856a:	90                   	nop
 804856b:	90                   	nop
 804856c:	90                   	nop
 804856d:	90                   	nop
 804856e:	90                   	nop
 804856f:	90                   	nop

08048570 <__do_global_dtors_aux>:
 8048570:	55                   	push   ebp
 8048571:	89 e5                	mov    ebp,esp
 8048573:	53                   	push   ebx
 8048574:	83 ec 04             	sub    esp,0x4
 8048577:	80 3d ac 9b 04 08 00 	cmp    BYTE PTR ds:0x8049bac,0x0
 804857e:	75 3f                	jne    80485bf <__do_global_dtors_aux+0x4f>
 8048580:	a1 b0 9b 04 08       	mov    eax,ds:0x8049bb0
 8048585:	bb 58 9a 04 08       	mov    ebx,0x8049a58
 804858a:	81 eb 54 9a 04 08    	sub    ebx,0x8049a54
 8048590:	c1 fb 02             	sar    ebx,0x2
 8048593:	83 eb 01             	sub    ebx,0x1
 8048596:	39 d8                	cmp    eax,ebx
 8048598:	73 1e                	jae    80485b8 <__do_global_dtors_aux+0x48>
 804859a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80485a0:	83 c0 01             	add    eax,0x1
 80485a3:	a3 b0 9b 04 08       	mov    ds:0x8049bb0,eax
 80485a8:	ff 14 85 54 9a 04 08 	call   DWORD PTR [eax*4+0x8049a54]
 80485af:	a1 b0 9b 04 08       	mov    eax,ds:0x8049bb0
 80485b4:	39 d8                	cmp    eax,ebx
 80485b6:	72 e8                	jb     80485a0 <__do_global_dtors_aux+0x30>
 80485b8:	c6 05 ac 9b 04 08 01 	mov    BYTE PTR ds:0x8049bac,0x1
 80485bf:	83 c4 04             	add    esp,0x4
 80485c2:	5b                   	pop    ebx
 80485c3:	5d                   	pop    ebp
 80485c4:	c3                   	ret    
 80485c5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80485c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080485d0 <frame_dummy>:
 80485d0:	55                   	push   ebp
 80485d1:	89 e5                	mov    ebp,esp
 80485d3:	83 ec 18             	sub    esp,0x18
 80485d6:	a1 5c 9a 04 08       	mov    eax,ds:0x8049a5c
 80485db:	85 c0                	test   eax,eax
 80485dd:	74 12                	je     80485f1 <frame_dummy+0x21>
 80485df:	b8 00 00 00 00       	mov    eax,0x0
 80485e4:	85 c0                	test   eax,eax
 80485e6:	74 09                	je     80485f1 <frame_dummy+0x21>
 80485e8:	c7 04 24 5c 9a 04 08 	mov    DWORD PTR [esp],0x8049a5c
 80485ef:	ff d0                	call   eax
 80485f1:	c9                   	leave  
 80485f2:	c3                   	ret    
 80485f3:	90                   	nop

080485f4 <main>:
 80485f4:	55                   	push   ebp
 80485f5:	89 e5                	mov    ebp,esp
 80485f7:	53                   	push   ebx
 80485f8:	83 e4 f0             	and    esp,0xfffffff0
 80485fb:	83 ec 20             	sub    esp,0x20
 80485fe:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
 8048602:	7f 0c                	jg     8048610 <main+0x1c>
 8048604:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
 804860b:	e8 e0 fe ff ff       	call   80484f0 <_exit@plt>
 8048610:	c7 04 24 6c 00 00 00 	mov    DWORD PTR [esp],0x6c
 8048617:	e8 14 ff ff ff       	call   8048530 <operator new(unsigned int)@plt>
 804861c:	89 c3                	mov    ebx,eax
 804861e:	c7 44 24 04 05 00 00 	mov    DWORD PTR [esp+0x4],0x5
 8048625:	00 
 8048626:	89 1c 24             	mov    DWORD PTR [esp],ebx
 8048629:	e8 c8 00 00 00       	call   80486f6 <N::N(int)>
 804862e:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
 8048632:	c7 04 24 6c 00 00 00 	mov    DWORD PTR [esp],0x6c
 8048639:	e8 f2 fe ff ff       	call   8048530 <operator new(unsigned int)@plt>
 804863e:	89 c3                	mov    ebx,eax
 8048640:	c7 44 24 04 06 00 00 	mov    DWORD PTR [esp+0x4],0x6
 8048647:	00 
 8048648:	89 1c 24             	mov    DWORD PTR [esp],ebx
 804864b:	e8 a6 00 00 00       	call   80486f6 <N::N(int)>
 8048650:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
 8048654:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 8048658:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
 804865c:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
 8048660:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
 8048664:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048667:	83 c0 04             	add    eax,0x4
 804866a:	8b 00                	mov    eax,DWORD PTR [eax]
 804866c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048670:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 8048674:	89 04 24             	mov    DWORD PTR [esp],eax
 8048677:	e8 92 00 00 00       	call   804870e <N::setAnnotation(char*)>
 804867c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048680:	8b 00                	mov    eax,DWORD PTR [eax]
 8048682:	8b 10                	mov    edx,DWORD PTR [eax]
 8048684:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 8048688:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804868c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048690:	89 04 24             	mov    DWORD PTR [esp],eax
 8048693:	ff d2                	call   edx
 8048695:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 8048698:	c9                   	leave  
 8048699:	c3                   	ret    

0804869a <__static_initialization_and_destruction_0(int, int)>:
 804869a:	55                   	push   ebp
 804869b:	89 e5                	mov    ebp,esp
 804869d:	83 ec 18             	sub    esp,0x18
 80486a0:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
 80486a4:	75 32                	jne    80486d8 <__static_initialization_and_destruction_0(int, int)+0x3e>
 80486a6:	81 7d 0c ff ff 00 00 	cmp    DWORD PTR [ebp+0xc],0xffff
 80486ad:	75 29                	jne    80486d8 <__static_initialization_and_destruction_0(int, int)+0x3e>
 80486af:	c7 04 24 b4 9b 04 08 	mov    DWORD PTR [esp],0x8049bb4
 80486b6:	e8 15 fe ff ff       	call   80484d0 <std::ios_base::Init::Init()@plt>
 80486bb:	b8 00 85 04 08       	mov    eax,0x8048500
 80486c0:	c7 44 24 08 78 9b 04 	mov    DWORD PTR [esp+0x8],0x8049b78
 80486c7:	08 
 80486c8:	c7 44 24 04 b4 9b 04 	mov    DWORD PTR [esp+0x4],0x8049bb4
 80486cf:	08 
 80486d0:	89 04 24             	mov    DWORD PTR [esp],eax
 80486d3:	e8 d8 fd ff ff       	call   80484b0 <__cxa_atexit@plt>
 80486d8:	c9                   	leave  
 80486d9:	c3                   	ret    

080486da <_GLOBAL__sub_I_main>:
 80486da:	55                   	push   ebp
 80486db:	89 e5                	mov    ebp,esp
 80486dd:	83 ec 18             	sub    esp,0x18
 80486e0:	c7 44 24 04 ff ff 00 	mov    DWORD PTR [esp+0x4],0xffff
 80486e7:	00 
 80486e8:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
 80486ef:	e8 a6 ff ff ff       	call   804869a <__static_initialization_and_destruction_0(int, int)>
 80486f4:	c9                   	leave  
 80486f5:	c3                   	ret    

080486f6 <N::N(int)>:
 80486f6:	55                   	push   ebp
 80486f7:	89 e5                	mov    ebp,esp
 80486f9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80486fc:	c7 00 48 88 04 08    	mov    DWORD PTR [eax],0x8048848
 8048702:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048705:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
 8048708:	89 50 68             	mov    DWORD PTR [eax+0x68],edx
 804870b:	5d                   	pop    ebp
 804870c:	c3                   	ret    
 804870d:	90                   	nop

0804870e <N::setAnnotation(char*)>:
 804870e:	55                   	push   ebp
 804870f:	89 e5                	mov    ebp,esp
 8048711:	83 ec 18             	sub    esp,0x18
 8048714:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048717:	89 04 24             	mov    DWORD PTR [esp],eax
 804871a:	e8 01 fe ff ff       	call   8048520 <strlen@plt>
 804871f:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 8048722:	83 c2 04             	add    edx,0x4
 8048725:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048729:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804872c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048730:	89 14 24             	mov    DWORD PTR [esp],edx
 8048733:	e8 d8 fd ff ff       	call   8048510 <memcpy@plt>
 8048738:	c9                   	leave  
 8048739:	c3                   	ret    

0804873a <N::operator+(N&)>:
 804873a:	55                   	push   ebp
 804873b:	89 e5                	mov    ebp,esp
 804873d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048740:	8b 50 68             	mov    edx,DWORD PTR [eax+0x68]
 8048743:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048746:	8b 40 68             	mov    eax,DWORD PTR [eax+0x68]
 8048749:	01 d0                	add    eax,edx
 804874b:	5d                   	pop    ebp
 804874c:	c3                   	ret    
 804874d:	90                   	nop

0804874e <N::operator-(N&)>:
 804874e:	55                   	push   ebp
 804874f:	89 e5                	mov    ebp,esp
 8048751:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048754:	8b 50 68             	mov    edx,DWORD PTR [eax+0x68]
 8048757:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804875a:	8b 40 68             	mov    eax,DWORD PTR [eax+0x68]
 804875d:	89 d1                	mov    ecx,edx
 804875f:	29 c1                	sub    ecx,eax
 8048761:	89 c8                	mov    eax,ecx
 8048763:	5d                   	pop    ebp
 8048764:	c3                   	ret    
 8048765:	90                   	nop
 8048766:	90                   	nop
 8048767:	90                   	nop
 8048768:	90                   	nop
 8048769:	90                   	nop
 804876a:	90                   	nop
 804876b:	90                   	nop
 804876c:	90                   	nop
 804876d:	90                   	nop
 804876e:	90                   	nop
 804876f:	90                   	nop

08048770 <__libc_csu_init>:
 8048770:	55                   	push   ebp
 8048771:	57                   	push   edi
 8048772:	56                   	push   esi
 8048773:	53                   	push   ebx
 8048774:	e8 69 00 00 00       	call   80487e2 <__i686.get_pc_thunk.bx>
 8048779:	81 c3 cb 13 00 00    	add    ebx,0x13cb
 804877f:	83 ec 1c             	sub    esp,0x1c
 8048782:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048786:	8d bb 08 ff ff ff    	lea    edi,[ebx-0xf8]
 804878c:	e8 d3 fc ff ff       	call   8048464 <_init>
 8048791:	8d 83 04 ff ff ff    	lea    eax,[ebx-0xfc]
 8048797:	29 c7                	sub    edi,eax
 8048799:	c1 ff 02             	sar    edi,0x2
 804879c:	85 ff                	test   edi,edi
 804879e:	74 29                	je     80487c9 <__libc_csu_init+0x59>
 80487a0:	31 f6                	xor    esi,esi
 80487a2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80487a8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80487ac:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80487af:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80487b3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80487b7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80487bb:	ff 94 b3 04 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xfc]
 80487c2:	83 c6 01             	add    esi,0x1
 80487c5:	39 fe                	cmp    esi,edi
 80487c7:	75 df                	jne    80487a8 <__libc_csu_init+0x38>
 80487c9:	83 c4 1c             	add    esp,0x1c
 80487cc:	5b                   	pop    ebx
 80487cd:	5e                   	pop    esi
 80487ce:	5f                   	pop    edi
 80487cf:	5d                   	pop    ebp
 80487d0:	c3                   	ret    
 80487d1:	eb 0d                	jmp    80487e0 <__libc_csu_fini>
 80487d3:	90                   	nop
 80487d4:	90                   	nop
 80487d5:	90                   	nop
 80487d6:	90                   	nop
 80487d7:	90                   	nop
 80487d8:	90                   	nop
 80487d9:	90                   	nop
 80487da:	90                   	nop
 80487db:	90                   	nop
 80487dc:	90                   	nop
 80487dd:	90                   	nop
 80487de:	90                   	nop
 80487df:	90                   	nop

080487e0 <__libc_csu_fini>:
 80487e0:	f3 c3                	repz ret 

080487e2 <__i686.get_pc_thunk.bx>:
 80487e2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80487e5:	c3                   	ret    
 80487e6:	90                   	nop
 80487e7:	90                   	nop
 80487e8:	90                   	nop
 80487e9:	90                   	nop
 80487ea:	90                   	nop
 80487eb:	90                   	nop
 80487ec:	90                   	nop
 80487ed:	90                   	nop
 80487ee:	90                   	nop
 80487ef:	90                   	nop

080487f0 <__do_global_ctors_aux>:
 80487f0:	55                   	push   ebp
 80487f1:	89 e5                	mov    ebp,esp
 80487f3:	53                   	push   ebx
 80487f4:	83 ec 04             	sub    esp,0x4
 80487f7:	a1 4c 9a 04 08       	mov    eax,ds:0x8049a4c
 80487fc:	83 f8 ff             	cmp    eax,0xffffffff
 80487ff:	74 13                	je     8048814 <__do_global_ctors_aux+0x24>
 8048801:	bb 4c 9a 04 08       	mov    ebx,0x8049a4c
 8048806:	66 90                	xchg   ax,ax
 8048808:	83 eb 04             	sub    ebx,0x4
 804880b:	ff d0                	call   eax
 804880d:	8b 03                	mov    eax,DWORD PTR [ebx]
 804880f:	83 f8 ff             	cmp    eax,0xffffffff
 8048812:	75 f4                	jne    8048808 <__do_global_ctors_aux+0x18>
 8048814:	83 c4 04             	add    esp,0x4
 8048817:	5b                   	pop    ebx
 8048818:	5d                   	pop    ebp
 8048819:	c3                   	ret    
 804881a:	90                   	nop
 804881b:	90                   	nop

Disassembly of section .fini:

0804881c <_fini>:
 804881c:	53                   	push   ebx
 804881d:	83 ec 08             	sub    esp,0x8
 8048820:	e8 00 00 00 00       	call   8048825 <_fini+0x9>
 8048825:	5b                   	pop    ebx
 8048826:	81 c3 1f 13 00 00    	add    ebx,0x131f
 804882c:	e8 3f fd ff ff       	call   8048570 <__do_global_dtors_aux>
 8048831:	83 c4 08             	add    esp,0x8
 8048834:	5b                   	pop    ebx
 8048835:	c3                   	ret    

Disassembly of section .rodata:

08048838 <_fp_hw>:
 8048838:	03 00                	add    eax,DWORD PTR [eax]
	...

0804883c <_IO_stdin_used>:
 804883c:	01 00                	add    DWORD PTR [eax],eax
 804883e:	02 00                	add    al,BYTE PTR [eax]

08048840 <vtable for N>:
 8048840:	00 00                	add    BYTE PTR [eax],al
 8048842:	00 00                	add    BYTE PTR [eax],al
 8048844:	54                   	push   esp
 8048845:	88 04 08             	mov    BYTE PTR [eax+ecx*1],al
 8048848:	3a 87 04 08 4e 87    	cmp    al,BYTE PTR [edi-0x78b1f7fc]
 804884e:	04 08                	add    al,0x8

08048850 <typeinfo name for N>:
 8048850:	31 4e 00             	xor    DWORD PTR [esi+0x0],ecx
	...

08048854 <typeinfo for N>:
 8048854:	88 9b 04 08 50 88    	mov    BYTE PTR [ebx-0x77aff7fc],bl
 804885a:	04 08                	add    al,0x8

Disassembly of section .eh_frame_hdr:

0804885c <.eh_frame_hdr>:
 804885c:	01 1b                	add    DWORD PTR [ebx],ebx
 804885e:	03 3b                	add    edi,DWORD PTR [ebx]
 8048860:	60                   	pusha  
 8048861:	00 00                	add    BYTE PTR [eax],al
 8048863:	00 0b                	add    BYTE PTR [ebx],cl
 8048865:	00 00                	add    BYTE PTR [eax],al
 8048867:	00 44 fc ff          	add    BYTE PTR [esp+edi*8-0x1],al
 804886b:	ff                   	(bad)  
 804886c:	7c 00                	jl     804886e <typeinfo for N+0x1a>
 804886e:	00 00                	add    BYTE PTR [eax],al
 8048870:	98                   	cwde   
 8048871:	fd                   	std    
 8048872:	ff                   	(bad)  
 8048873:	ff 20                	jmp    DWORD PTR [eax]
 8048875:	01 00                	add    DWORD PTR [eax],eax
 8048877:	00 3e                	add    BYTE PTR [esi],bh
 8048879:	fe                   	(bad)  
 804887a:	ff                   	(bad)  
 804887b:	ff 44 01 00          	inc    DWORD PTR [ecx+eax*1+0x0]
 804887f:	00 7e fe             	add    BYTE PTR [esi-0x2],bh
 8048882:	ff                   	(bad)  
 8048883:	ff 64 01 00          	jmp    DWORD PTR [ecx+eax*1+0x0]
 8048887:	00 9a fe ff ff a0    	add    BYTE PTR [edx-0x5f000002],bl
 804888d:	00 00                	add    BYTE PTR [eax],al
 804888f:	00 b2 fe ff ff c0    	add    BYTE PTR [edx-0x3f000002],dh
 8048895:	00 00                	add    BYTE PTR [eax],al
 8048897:	00 de                	add    dh,bl
 8048899:	fe                   	(bad)  
 804889a:	ff                   	(bad)  
 804889b:	ff e0                	jmp    eax
 804889d:	00 00                	add    BYTE PTR [eax],al
 804889f:	00 f2                	add    dl,dh
 80488a1:	fe                   	(bad)  
 80488a2:	ff                   	(bad)  
 80488a3:	ff 00                	inc    DWORD PTR [eax]
 80488a5:	01 00                	add    DWORD PTR [eax],eax
 80488a7:	00 14 ff             	add    BYTE PTR [edi+edi*8],dl
 80488aa:	ff                   	(bad)  
 80488ab:	ff 84 01 00 00 84 ff 	inc    DWORD PTR [ecx+eax*1-0x7c0000]
 80488b2:	ff                   	(bad)  
 80488b3:	ff c0                	inc    eax
 80488b5:	01 00                	add    DWORD PTR [eax],eax
 80488b7:	00 86 ff ff ff d4    	add    BYTE PTR [esi-0x2b000001],al
 80488bd:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .eh_frame:

080488c0 <__FRAME_END__-0x184>:
 80488c0:	14 00                	adc    al,0x0
 80488c2:	00 00                	add    BYTE PTR [eax],al
 80488c4:	00 00                	add    BYTE PTR [eax],al
 80488c6:	00 00                	add    BYTE PTR [eax],al
 80488c8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 80488cb:	00 01                	add    BYTE PTR [ecx],al
 80488cd:	7c 08                	jl     80488d7 <typeinfo for N+0x83>
 80488cf:	01 1b                	add    DWORD PTR [ebx],ebx
 80488d1:	0c 04                	or     al,0x4
 80488d3:	04 88                	add    al,0x88
 80488d5:	01 00                	add    DWORD PTR [eax],eax
 80488d7:	00 20                	add    BYTE PTR [eax],ah
 80488d9:	00 00                	add    BYTE PTR [eax],al
 80488db:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80488de:	00 00                	add    BYTE PTR [eax],al
 80488e0:	c0 fb ff             	sar    bl,0xff
 80488e3:	ff a0 00 00 00 00    	jmp    DWORD PTR [eax+0x0]
 80488e9:	0e                   	push   cs
 80488ea:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 80488ed:	0c 4a                	or     al,0x4a
 80488ef:	0f 0b                	ud2    
 80488f1:	74 04                	je     80488f7 <typeinfo for N+0xa3>
 80488f3:	78 00                	js     80488f5 <typeinfo for N+0xa1>
 80488f5:	3f                   	aas    
 80488f6:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 80488f8:	2a 32                	sub    dh,BYTE PTR [edx]
 80488fa:	24 22                	and    al,0x22
 80488fc:	1c 00                	sbb    al,0x0
 80488fe:	00 00                	add    BYTE PTR [eax],al
 8048900:	40                   	inc    eax
 8048901:	00 00                	add    BYTE PTR [eax],al
 8048903:	00 f2                	add    dl,dh
 8048905:	fd                   	std    
 8048906:	ff                   	(bad)  
 8048907:	ff 17                	call   DWORD PTR [edi]
 8048909:	00 00                	add    BYTE PTR [eax],al
 804890b:	00 00                	add    BYTE PTR [eax],al
 804890d:	41                   	inc    ecx
 804890e:	0e                   	push   cs
 804890f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048915:	53                   	push   ebx
 8048916:	0c 04                	or     al,0x4
 8048918:	04 c5                	add    al,0xc5
 804891a:	00 00                	add    BYTE PTR [eax],al
 804891c:	1c 00                	sbb    al,0x0
 804891e:	00 00                	add    BYTE PTR [eax],al
 8048920:	60                   	pusha  
 8048921:	00 00                	add    BYTE PTR [eax],al
 8048923:	00 ea                	add    dl,ch
 8048925:	fd                   	std    
 8048926:	ff                   	(bad)  
 8048927:	ff 2c 00             	jmp    FWORD PTR [eax+eax*1]
 804892a:	00 00                	add    BYTE PTR [eax],al
 804892c:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804892f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048935:	68 c5 0c 04 04       	push   0x4040cc5
 804893a:	00 00                	add    BYTE PTR [eax],al
 804893c:	1c 00                	sbb    al,0x0
 804893e:	00 00                	add    BYTE PTR [eax],al
 8048940:	80 00 00             	add    BYTE PTR [eax],0x0
 8048943:	00 f6                	add    dh,dh
 8048945:	fd                   	std    
 8048946:	ff                   	(bad)  
 8048947:	ff 13                	call   DWORD PTR [ebx]
 8048949:	00 00                	add    BYTE PTR [eax],al
 804894b:	00 00                	add    BYTE PTR [eax],al
 804894d:	41                   	inc    ecx
 804894e:	0e                   	push   cs
 804894f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048955:	4f                   	dec    edi
 8048956:	0c 04                	or     al,0x4
 8048958:	04 c5                	add    al,0xc5
 804895a:	00 00                	add    BYTE PTR [eax],al
 804895c:	1c 00                	sbb    al,0x0
 804895e:	00 00                	add    BYTE PTR [eax],al
 8048960:	a0 00 00 00 ea       	mov    al,ds:0xea000000
 8048965:	fd                   	std    
 8048966:	ff                   	(bad)  
 8048967:	ff 17                	call   DWORD PTR [edi]
 8048969:	00 00                	add    BYTE PTR [eax],al
 804896b:	00 00                	add    BYTE PTR [eax],al
 804896d:	41                   	inc    ecx
 804896e:	0e                   	push   cs
 804896f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048975:	53                   	push   ebx
 8048976:	0c 04                	or     al,0x4
 8048978:	04 c5                	add    al,0xc5
 804897a:	00 00                	add    BYTE PTR [eax],al
 804897c:	20 00                	and    BYTE PTR [eax],al
 804897e:	00 00                	add    BYTE PTR [eax],al
 8048980:	c0 00 00             	rol    BYTE PTR [eax],0x0
 8048983:	00 70 fc             	add    BYTE PTR [eax-0x4],dh
 8048986:	ff                   	(bad)  
 8048987:	ff a6 00 00 00 00    	jmp    DWORD PTR [esi+0x0]
 804898d:	41                   	inc    ecx
 804898e:	0e                   	push   cs
 804898f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048995:	4d                   	dec    ebp
 8048996:	83 03 02             	add    DWORD PTR [ebx],0x2
 8048999:	95                   	xchg   ebp,eax
 804899a:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804899d:	04 c3                	add    al,0xc3
 804899f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80489a2:	00 00                	add    BYTE PTR [eax],al
 80489a4:	e4 00                	in     al,0x0
 80489a6:	00 00                	add    BYTE PTR [eax],al
 80489a8:	f2 fc                	repnz cld 
 80489aa:	ff                   	(bad)  
 80489ab:	ff 40 00             	inc    DWORD PTR [eax+0x0]
 80489ae:	00 00                	add    BYTE PTR [eax],al
 80489b0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80489b3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80489b9:	7c c5                	jl     8048980 <typeinfo for N+0x12c>
 80489bb:	0c 04                	or     al,0x4
 80489bd:	04 00                	add    al,0x0
 80489bf:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80489c2:	00 00                	add    BYTE PTR [eax],al
 80489c4:	04 01                	add    al,0x1
 80489c6:	00 00                	add    BYTE PTR [eax],al
 80489c8:	12 fd                	adc    bh,ch
 80489ca:	ff                   	(bad)  
 80489cb:	ff 1c 00             	call   FWORD PTR [eax+eax*1]
 80489ce:	00 00                	add    BYTE PTR [eax],al
 80489d0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80489d3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80489d9:	58                   	pop    eax
 80489da:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80489dd:	04 00                	add    al,0x0
 80489df:	00 38                	add    BYTE PTR [eax],bh
 80489e1:	00 00                	add    BYTE PTR [eax],al
 80489e3:	00 24 01             	add    BYTE PTR [ecx+eax*1],ah
 80489e6:	00 00                	add    BYTE PTR [eax],al
 80489e8:	88 fd                	mov    ch,bh
 80489ea:	ff                   	(bad)  
 80489eb:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80489ee:	00 00                	add    BYTE PTR [eax],al
 80489f0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80489f3:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80489f9:	87 03                	xchg   DWORD PTR [ebx],eax
 80489fb:	41                   	inc    ecx
 80489fc:	0e                   	push   cs
 80489fd:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 8048a03:	83 05 4e 0e 30 02 4a 	add    DWORD PTR ds:0x2300e4e,0x4a
 8048a0a:	0e                   	push   cs
 8048a0b:	14 41                	adc    al,0x41
 8048a0d:	0e                   	push   cs
 8048a0e:	10 c3                	adc    bl,al
 8048a10:	41                   	inc    ecx
 8048a11:	0e                   	push   cs
 8048a12:	0c c6                	or     al,0xc6
 8048a14:	41                   	inc    ecx
 8048a15:	0e                   	push   cs
 8048a16:	08 c7                	or     bh,al
 8048a18:	41                   	inc    ecx
 8048a19:	0e                   	push   cs
 8048a1a:	04 c5                	add    al,0xc5
 8048a1c:	10 00                	adc    BYTE PTR [eax],al
 8048a1e:	00 00                	add    BYTE PTR [eax],al
 8048a20:	60                   	pusha  
 8048a21:	01 00                	add    DWORD PTR [eax],eax
 8048a23:	00 bc fd ff ff 02 00 	add    BYTE PTR [ebp+edi*8+0x2ffff],bh
 8048a2a:	00 00                	add    BYTE PTR [eax],al
 8048a2c:	00 00                	add    BYTE PTR [eax],al
 8048a2e:	00 00                	add    BYTE PTR [eax],al
 8048a30:	10 00                	adc    BYTE PTR [eax],al
 8048a32:	00 00                	add    BYTE PTR [eax],al
 8048a34:	74 01                	je     8048a37 <typeinfo for N+0x1e3>
 8048a36:	00 00                	add    BYTE PTR [eax],al
 8048a38:	aa                   	stos   BYTE PTR es:[edi],al
 8048a39:	fd                   	std    
 8048a3a:	ff                   	(bad)  
 8048a3b:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 8048a3e:	00 00                	add    BYTE PTR [eax],al
 8048a40:	00 00                	add    BYTE PTR [eax],al
	...

08048a44 <__FRAME_END__>:
 8048a44:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049a48 <__init_array_start>:
 8049a48:	da                   	.byte 0xda
 8049a49:	86 04 08             	xchg   BYTE PTR [eax+ecx*1],al

Disassembly of section .ctors:

08049a4c <__CTOR_LIST__>:
 8049a4c:	ff                   	(bad)  
 8049a4d:	ff                   	(bad)  
 8049a4e:	ff                   	(bad)  
 8049a4f:	ff                 	inc    DWORD PTR [eax]

08049a50 <__CTOR_END__>:
 8049a50:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dtors:

08049a54 <__DTOR_LIST__>:
 8049a54:	ff                   	(bad)  
 8049a55:	ff                   	(bad)  
 8049a56:	ff                   	(bad)  
 8049a57:	ff                 	inc    DWORD PTR [eax]

08049a58 <__DTOR_END__>:
 8049a58:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .jcr:

08049a5c <__JCR_END__>:
 8049a5c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049a60 <_DYNAMIC>:
 8049a60:	01 00                	add    DWORD PTR [eax],eax
 8049a62:	00 00                	add    BYTE PTR [eax],al
 8049a64:	01 00                	add    DWORD PTR [eax],eax
 8049a66:	00 00                	add    BYTE PTR [eax],al
 8049a68:	01 00                	add    DWORD PTR [eax],eax
 8049a6a:	00 00                	add    BYTE PTR [eax],al
 8049a6c:	8f 00                	pop    DWORD PTR [eax]
 8049a6e:	00 00                	add    BYTE PTR [eax],al
 8049a70:	0c 00                	or     al,0x0
 8049a72:	00 00                	add    BYTE PTR [eax],al
 8049a74:	64 84 04 08          	test   BYTE PTR fs:[eax+ecx*1],al
 8049a78:	0d 00 00 00 1c       	or     eax,0x1c000000
 8049a7d:	88 04 08             	mov    BYTE PTR [eax+ecx*1],al
 8049a80:	19 00                	sbb    DWORD PTR [eax],eax
 8049a82:	00 00                	add    BYTE PTR [eax],al
 8049a84:	48                   	dec    eax
 8049a85:	9a 04 08 1b 00 00 00 	call   0x0:0x1b0804
 8049a8c:	04 00                	add    al,0x0
 8049a8e:	00 00                	add    BYTE PTR [eax],al
 8049a90:	f5                   	cmc    
 8049a91:	fe                   	(bad)  
 8049a92:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049a95:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049a9c:	88 82 04 08 06 00    	mov    BYTE PTR [edx+0x60804],al
 8049aa2:	00 00                	add    BYTE PTR [eax],al
 8049aa4:	b8 81 04 08 0a       	mov    eax,0xa080481
 8049aa9:	00 00                	add    BYTE PTR [eax],al
 8049aab:	00 08                	add    BYTE PTR [eax],cl
 8049aad:	01 00                	add    DWORD PTR [eax],eax
 8049aaf:	00 0b                	add    BYTE PTR [ebx],cl
 8049ab1:	00 00                	add    BYTE PTR [eax],al
 8049ab3:	00 10                	add    BYTE PTR [eax],dl
 8049ab5:	00 00                	add    BYTE PTR [eax],al
 8049ab7:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049abd:	00 00                	add    BYTE PTR [eax],al
 8049abf:	00 03                	add    BYTE PTR [ebx],al
 8049ac1:	00 00                	add    BYTE PTR [eax],al
 8049ac3:	00 44 9b 04          	add    BYTE PTR [ebx+ebx*4+0x4],al
 8049ac7:	08 02                	or     BYTE PTR [edx],al
 8049ac9:	00 00                	add    BYTE PTR [eax],al
 8049acb:	00 48 00             	add    BYTE PTR [eax+0x0],cl
 8049ace:	00 00                	add    BYTE PTR [eax],al
 8049ad0:	14 00                	adc    al,0x0
 8049ad2:	00 00                	add    BYTE PTR [eax],al
 8049ad4:	11 00                	adc    DWORD PTR [eax],eax
 8049ad6:	00 00                	add    BYTE PTR [eax],al
 8049ad8:	17                   	pop    ss
 8049ad9:	00 00                	add    BYTE PTR [eax],al
 8049adb:	00 1c 84             	add    BYTE PTR [esp+eax*4],bl
 8049ade:	04 08                	add    al,0x8
 8049ae0:	11 00                	adc    DWORD PTR [eax],eax
 8049ae2:	00 00                	add    BYTE PTR [eax],al
 8049ae4:	0c 84                	or     al,0x84
 8049ae6:	04 08                	add    al,0x8
 8049ae8:	12 00                	adc    al,BYTE PTR [eax]
 8049aea:	00 00                	add    BYTE PTR [eax],al
 8049aec:	10 00                	adc    BYTE PTR [eax],al
 8049aee:	00 00                	add    BYTE PTR [eax],al
 8049af0:	13 00                	adc    eax,DWORD PTR [eax]
 8049af2:	00 00                	add    BYTE PTR [eax],al
 8049af4:	08 00                	or     BYTE PTR [eax],al
 8049af6:	00 00                	add    BYTE PTR [eax],al
 8049af8:	fe                   	(bad)  
 8049af9:	ff                   	(bad)  
 8049afa:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049afd:	83 04 08 ff          	add    DWORD PTR [eax+ecx*1],0xffffffff
 8049b01:	ff                   	(bad)  
 8049b02:	ff 6f 02             	jmp    FWORD PTR [edi+0x2]
 8049b05:	00 00                	add    BYTE PTR [eax],al
 8049b07:	00 f0                	add    al,dh
 8049b09:	ff                   	(bad)  
 8049b0a:	ff 6f 90             	jmp    FWORD PTR [edi-0x70]
 8049b0d:	83 04 08 00          	add    DWORD PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

08049b40 <.got>:
 8049b40:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

08049b44 <_GLOBAL_OFFSET_TABLE_>:
 8049b44:	60                   	pusha  
 8049b45:	9a 04 08 00 00 00 00 	call   0x0:0x804
 8049b4c:	00 00                	add    BYTE PTR [eax],al
 8049b4e:	00 00                	add    BYTE PTR [eax],al
 8049b50:	b6 84                	mov    dh,0x84
 8049b52:	04 08                	add    al,0x8
 8049b54:	c6 84 04 08 d6 84 04 	mov    BYTE PTR [esp+eax*1+0x484d608],0x8
 8049b5b:	08 
 8049b5c:	e6 84                	out    0x84,al
 8049b5e:	04 08                	add    al,0x8
 8049b60:	f6 84 04 08 06 85 04 	test   BYTE PTR [esp+eax*1+0x4850608],0x8
 8049b67:	08 
 8049b68:	16                   	push   ss
 8049b69:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 8049b6c:	26 85 04 08          	test   DWORD PTR es:[eax+ecx*1],eax
 8049b70:	36 85 04 08          	test   DWORD PTR ss:[eax+ecx*1],eax

Disassembly of section .data:

08049b74 <__data_start>:
 8049b74:	00 00                	add    BYTE PTR [eax],al
	...

08049b78 <__dso_handle>:
 8049b78:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

08049b80 <vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3>:
	...

08049bac <completed.6159>:
 8049bac:	00 00                	add    BYTE PTR [eax],al
	...

08049bb0 <dtor_idx.6161>:
 8049bb0:	00 00                	add    BYTE PTR [eax],al
	...

08049bb4 <std::__ioinit>:
 8049bb4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x80483ec>
   a:	74 75                	je     81 <_init-0x80483e3>
   c:	2f                   	das    
   d:	4c                   	dec    esp
   e:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  15:	2e 36 2e 33 2d 31 75 	cs ss xor ebp,DWORD PTR cs:0x75627531
  1c:	62 75 
  1e:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1f:	74 75                	je     96 <_init-0x80483ce>
  21:	35 29 20 34 2e       	xor    eax,0x2e342029
  26:	36 2e 33 00          	ss xor eax,DWORD PTR cs:[eax]
